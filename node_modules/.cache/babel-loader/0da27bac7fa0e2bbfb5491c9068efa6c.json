{"remainingRequest":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/Login.vue","mtime":1557043206000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Axios from 'axios';\nimport { mapActions } from 'vuex';\nimport { sync } from 'vuex-pathify';\nimport controlData from './getApiData/controlData';\nimport store from '../store/store';\nexport default {\n  name: 'Login',\n  components: {// tab,\n  },\n  data: function data() {\n    return {\n      Store: this.$store.state,\n      snackฺฺฺBarBool: false,\n      msgSnackBar: null,\n      timeout: 5000,\n      inputUserName: null,\n      inputPassword: null,\n      test: 'testdata',\n      data: [],\n      z: '',\n      loading: false,\n      datainsert: {\n        pid: '1759900252875',\n        fname: 'A-nupha',\n        lname: 'Supreyaporn',\n        tname: 'mr.',\n        bdate: '25620202',\n        email: 'fhj@gmail.com',\n        tel: '0882881878',\n        flag_id: '0',\n        now_date: '22560202',\n        rcode_id: '7704',\n        index1: '1234',\n        index2: '1234'\n      },\n      desserts: [{\n        name: 'Frozen Yogurt',\n        calories: 159,\n        fat: 6.0,\n        carbs: 24,\n        protein: 4.0,\n        iron: '1%'\n      }, {\n        name: 'Ice cream sandwich',\n        calories: 237,\n        fat: 9.0,\n        carbs: 37,\n        protein: 4.3,\n        iron: '1%'\n      }, {\n        name: 'Eclair',\n        calories: 262,\n        fat: 16.0,\n        carbs: 23,\n        protein: 6.0,\n        iron: '7%'\n      }, {\n        name: 'Cupcake',\n        calories: 305,\n        fat: 3.7,\n        carbs: 67,\n        protein: 4.3,\n        iron: '8%'\n      }, {\n        name: 'Gingerbread',\n        calories: 356,\n        fat: 16.0,\n        carbs: 49,\n        protein: 3.9,\n        iron: '16%'\n      }, {\n        name: 'Jelly bean',\n        calories: 375,\n        fat: 0.0,\n        carbs: 94,\n        protein: 0.0,\n        iron: '0%'\n      }, {\n        name: 'Lollipop',\n        calories: 392,\n        fat: 0.2,\n        carbs: 98,\n        protein: 0,\n        iron: '2%'\n      }, {\n        name: 'Honeycomb',\n        calories: 408,\n        fat: 3.2,\n        carbs: 87,\n        protein: 6.5,\n        iron: '45%'\n      }, {\n        name: 'Donut',\n        calories: 452,\n        fat: 25.0,\n        carbs: 51,\n        protein: 4.9,\n        iron: '22%'\n      }, {\n        name: 'KitKat',\n        calories: 518,\n        fat: 26.0,\n        carbs: 65,\n        protein: 7,\n        iron: '6%'\n      }]\n    };\n  },\n  computed: _objectSpread({}, sync('*')),\n  created: function created() {\n    this.insert(); // controlData.search().then((response) => {\n    //   let retData = response.data\n    //   retData.forEach((k, v) => {\n    //     let pid = k.pid\n    //     if (pid != this.store.state.userName) {\n    //       alert('ไม่พบผู้ใช้งานนี้ในระบบ')\n    //     }\n    //   });\n    // });\n  },\n  methods: _objectSpread({\n    insert: function () {\n      var _insert = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var api, Empparams, az;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                api = 'https://a-nuphasupit58.000webhostapp.com/php/test.php'; // const fromData = new FormData();\n\n                Empparams = new URLSearchParams();\n                az = JSON.stringify(this.desserts);\n                console.log('data', az);\n                Empparams.append('dataarr', az);\n                _context.next = 7;\n                return Axios.post(api, Empparams).then(function (response) {\n                  console.log(response.data);\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function insert() {\n        return _insert.apply(this, arguments);\n      };\n    }(),\n    getUser: function () {\n      var _getUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getUser() {\n        return _getUser.apply(this, arguments);\n      };\n    }(),\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var userName, passWord, menu;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.loading = true; // eslint-disable-next-line prefer-destructuring\n\n                userName = store.state.userName; // eslint-disable-next-line prefer-destructuring\n\n                passWord = store.state.passWord;\n                _context3.next = 5;\n                return controlData.login(userName, passWord);\n\n              case 5:\n                if (String(store.state.dataLogin[0].index1).toLowerCase() === String(userName).toLowerCase()) {\n                  // alert('ถูกต้อง')\n                  console.log('data login', store.state.dataLogin);\n                  menu = 'Menu';\n                  this.setDataLogin(menu);\n                  this.getUser();\n                  this.Store.nameUser = store.state.dataLogin[0].fname;\n                  this.loading = false;\n                  console.log('store.state.dataLogin', store.state.dataLogin[0].fname);\n                }\n\n                _context3.t0 = String;\n                _context3.next = 9;\n                return store.state.dataLogin;\n\n              case 9:\n                _context3.t1 = _context3.sent;\n                _context3.t2 = (0, _context3.t0)(_context3.t1);\n\n                if (!(_context3.t2 === 'password is incorrect')) {\n                  _context3.next = 17;\n                  break;\n                }\n\n                console.log('test');\n                this.msgSnackBar = 'password is incorrect';\n                this.snackฺฺฺBarBool = true;\n                console.log(store.state.dataLogin);\n                this.loading = false;\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function login() {\n        return _login.apply(this, arguments);\n      };\n    }()\n  }, mapActions({\n    setDataLogin: 'getApi/setDataLogin'\n  }), {\n    setData: function () {\n      var _setData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(data) {\n        var menu;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                controlData.save(data);\n                menu = 'Menu';\n                this.setDataLogin(menu); // await this.validatePassword()\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function setData(_x) {\n        return _setData.apply(this, arguments);\n      };\n    }(),\n    // validatePassword() {\n    //   if (Username == this.XXX && this.password == this.yyy) {\n    //     const menu = 'Menu'\n    //     this.setDataLogin(menu);\n    //   }\n    // },\n    Register: function Register() {\n      var Register = 'Register';\n      this.setDataLogin(Register);\n    }\n  })\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-content>\n      <v-container>\n        <v-layout align-center justify-center>\n          <v-flex class=\"grey lighten-4\">\n            <v-container>\n              <v-card flat>\n                <v-card-title>\n                  <v-toolbar color=\"blue lighten-2\" dark>\n                    <v-layout><v-icon>mdi-login</v-icon></v-layout>\n                    <v-layout>\n                      <v-flex caption>\n                        \n                        Enter your usename and password to log on\n                        </v-flex>\n                        </v-layout>\n                    \n                    \n                  </v-toolbar>\n                </v-card-title>\n                <v-form>\n                  <v-layout>\n                    <v-flex ma-1 pr-5  >\n                      <v-text-field prepend-icon=\"mdi-account\" name=\"Username\" label=\"Username\" v-model=\"userName\"></v-text-field>\n                      <v-text-field prepend-icon=\"mdi-lock\" name=\"Password\" label=\"Password\" type=\"password\" v-model=\"passWord\"></v-text-field>\n                    </v-flex>\n                  </v-layout>\n                  <v-card-actions>\n                    <v-btn color=\"blue\" :loading=\"loading\"  dark large block @click=\"login()\">Login</v-btn>\n                    <!-- <v-btn color=\"red\" dark large block @click=\"Register()\">Register</v-btn> -->\n                  </v-card-actions>\n                  <!-- <li>{{userName}}</li> -->\n                  <!-- <li>{{msg}}</li> -->\n                  <!-- {{store.state.msgSnackBar}} -->\n                  \n\n                </v-form>\n                \n              </v-card>\n            </v-container>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-content>\n    <v-snackbar\n    :vertical=\"true\"\n    v-model=\"snackฺฺฺBarBool\"\n    color=\"orange\"\n    :timeout=\"timeout\"\n    bottom>\n    <v-flex >{{msgSnackBar}}</v-flex>\n  </v-snackbar>\n  <!-- {{snackฺฺฺBarBool}} -->\n  </div>\n</template>\n<script>\nimport Axios from 'axios';\nimport {\n  mapActions,\n} from 'vuex'\nimport {\n  sync,\n} from 'vuex-pathify'\nimport controlData from './getApiData/controlData'\nimport store from '../store/store'\n\n\nexport default {\n  name: 'Login',\n  components: {\n    // tab,\n  },\n  data() {\n    return {\n      Store: this.$store.state,\n      snackฺฺฺBarBool: false,\n      msgSnackBar: null,\n      timeout: 5000,\n      inputUserName: null,\n      inputPassword: null,\n      test: 'testdata',\n      data: [],\n      z: '',\n      loading: false,\n      datainsert: {\n        pid: '1759900252875',\n        fname: 'A-nupha',\n        lname: 'Supreyaporn',\n        tname: 'mr.',\n        bdate: '25620202',\n        email: 'fhj@gmail.com',\n        tel: '0882881878',\n        flag_id: '0',\n        now_date: '22560202',\n        rcode_id: '7704',\n        index1: '1234',\n        index2: '1234',\n      },\n      desserts: [\n        {\n          name: 'Frozen Yogurt',\n          calories: 159,\n          fat: 6.0,\n          carbs: 24,\n          protein: 4.0,\n          iron: '1%',\n        },\n        {\n          name: 'Ice cream sandwich',\n          calories: 237,\n          fat: 9.0,\n          carbs: 37,\n          protein: 4.3,\n          iron: '1%',\n        },\n        {\n          name: 'Eclair',\n          calories: 262,\n          fat: 16.0,\n          carbs: 23,\n          protein: 6.0,\n          iron: '7%',\n        },\n        {\n          name: 'Cupcake',\n          calories: 305,\n          fat: 3.7,\n          carbs: 67,\n          protein: 4.3,\n          iron: '8%',\n        },\n        {\n          name: 'Gingerbread',\n          calories: 356,\n          fat: 16.0,\n          carbs: 49,\n          protein: 3.9,\n          iron: '16%',\n        },\n        {\n          name: 'Jelly bean',\n          calories: 375,\n          fat: 0.0,\n          carbs: 94,\n          protein: 0.0,\n          iron: '0%',\n        },\n        {\n          name: 'Lollipop',\n          calories: 392,\n          fat: 0.2,\n          carbs: 98,\n          protein: 0,\n          iron: '2%',\n        },\n        {\n          name: 'Honeycomb',\n          calories: 408,\n          fat: 3.2,\n          carbs: 87,\n          protein: 6.5,\n          iron: '45%',\n        },\n        {\n          name: 'Donut',\n          calories: 452,\n          fat: 25.0,\n          carbs: 51,\n          protein: 4.9,\n          iron: '22%',\n        },\n        {\n          name: 'KitKat',\n          calories: 518,\n          fat: 26.0,\n          carbs: 65,\n          protein: 7,\n          iron: '6%',\n        },\n      ],\n    }\n  },\n  computed: {\n    ...sync('*'),\n  },\n  created() {\n    this.insert()\n    // controlData.search().then((response) => {\n    //   let retData = response.data\n    //   retData.forEach((k, v) => {\n    //     let pid = k.pid\n    //     if (pid != this.store.state.userName) {\n    //       alert('ไม่พบผู้ใช้งานนี้ในระบบ')\n    //     }\n    //   });\n    // });\n  },\n\n  methods: {\n    async insert() {\n      const api = 'https://a-nuphasupit58.000webhostapp.com/php/test.php';\n      // const fromData = new FormData();\n      const Empparams = new URLSearchParams();\n      const az = JSON.stringify(this.desserts)\n      console.log('data', az)\n      Empparams.append('dataarr', az)\n      await Axios.post(api, Empparams)\n        .then((response) => {\n          console.log(response.data);\n        })\n    },\n\n\n    async getUser() {\n      // await controlData.search().then((response) => {\n      //   const retData = response.data\n      //   console.log('daTAaPIsERCH', retData)\n      //   for (let i = 0; i < retData.length; i += 1) {\n      //\n      //   //   this.$set(this.Store.dataUserApi, i, {\n      //   //     ...this.Store.dataUserApi[i],\n      //   //     indexLog: i,\n      //   //   })\n      //   //   this.$set(this.Store.dataUserApi, i, {\n      //   //     ...this.Store.dataUserApi[i],\n      //   //     index2Edit: this.Store.dataUserApi[i].index2,\n      //   //   })\n      //   }\n      //   // console.log(this.Store.dataUserApi)\n      // });\n    },\n    async login() {\n      this.loading = true\n      // eslint-disable-next-line prefer-destructuring\n      const userName = store.state.userName\n      // eslint-disable-next-line prefer-destructuring\n      const passWord = store.state.passWord\n      await controlData.login(userName, passWord)\n      if (String(store.state.dataLogin[0].index1)\n        .toLowerCase() === String(userName).toLowerCase()) {\n        // alert('ถูกต้อง')\n        console.log('data login', store.state.dataLogin)\n        const menu = 'Menu'\n        this.setDataLogin(menu);\n        this.getUser()\n        this.Store.nameUser = store.state.dataLogin[0].fname\n        this.loading = false\n        console.log('store.state.dataLogin', store.state.dataLogin[0].fname)\n      } if (String(await store.state.dataLogin) === 'password is incorrect') {\n        console.log('test')\n        this.msgSnackBar = 'password is incorrect'\n        this.snackฺฺฺBarBool = true\n        console.log(store.state.dataLogin)\n        this.loading = false\n      }\n    },\n    ...mapActions({\n      setDataLogin: 'getApi/setDataLogin',\n    }),\n    async setData(data) {\n      controlData.save(data)\n      const menu = 'Menu'\n      this.setDataLogin(menu);\n      // await this.validatePassword()\n    },\n    // validatePassword() {\n    //   if (Username == this.XXX && this.password == this.yyy) {\n    //     const menu = 'Menu'\n    //     this.setDataLogin(menu);\n    //   }\n    // },\n    Register() {\n      const Register = 'Register'\n      this.setDataLogin(Register);\n    },\n  },\n}\n</script>\n<style>\n  /* .bg {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      top: 0;\n      left: 0;\n      background-color: red;\n      transform: scale(1.1);\n    } */\n</style>\n"],"sourceRoot":"src/views"}]}