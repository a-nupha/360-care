{"remainingRequest":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/Register.vue","mtime":1557043206000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport { sync } from 'vuex-pathify';\nimport moment from 'moment';\nimport Axios from 'axios';\nimport controlData from './getApiData/controlData';\nimport store from '../store/store';\nimport functions from '../plugins/functions';\nexport default {\n  data: function data() {\n    return {\n      cate_value: '',\n      valid: true,\n      color: '',\n      branchName: '',\n      snackฺฺฺBarBool: null,\n      timeout: 10000,\n      select: '02',\n      items: ['Empooyee', 'Manager'],\n      selected: '',\n      confirmPassword: '',\n      getBranch: '',\n      LastName: '',\n      username: '',\n      nameRules: [function (v) {\n        return !!v || 'Name is required';\n      }],\n      branchRules: [function (v) {\n        return !!v || 'branch is required';\n      }],\n      pidRules: [function (v) {\n        return !!v || 'pid is required';\n      }, function (v) {\n        return v && v.length === 13 || 'pid is not match';\n      }],\n      passRules: [function (v) {\n        return !!v || 'password is required';\n      }],\n      fnameRules: [function (v) {\n        return !!v || 'firstName is required';\n      }],\n      lnameRules: [function (v) {\n        return !!v || 'lastName is required';\n      }],\n      password: '',\n      email: '',\n      emailRules: [function (v) {\n        return !!v || 'E-mail is required';\n      }, function (v) {\n        return /.+@.+/.test(v) || 'E-mail must be valid';\n      }],\n      fname: '',\n      lname: '',\n      tname: 'Mr.',\n      branch: '',\n      pid: '',\n      msgSnackBar: '',\n      loadingbtn: null,\n      // nowDate: functions.moment('YYYYMMDD'),\n      nowDate: functions.moment(moment().format('YYYYMMDD'))\n    };\n  },\n  computed: _objectSpread({}, sync('*'), {\n    comparePasswords: function comparePasswords() {\n      return this.password !== this.confirmPassword ? 'Passwords do not match.' : true;\n    }\n  }),\n  watch: {},\n  created: function created() {\n    this.getDataBranch();\n  },\n  methods: _objectSpread({}, mapActions({\n    setDataLogin: 'getApi/setDataLogin'\n  }), {\n    validate: function validate() {\n      if (this.$refs.form.validate()) {\n        this.dataInsert();\n      }\n    },\n    dataInsert: function () {\n      var _dataInsert = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var obj;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.username || this.password || this.fname || this.pid)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                this.loadingbtn = true;\n                obj = {\n                  username: this.username,\n                  password: this.password,\n                  email: this.email,\n                  fname: this.fname,\n                  lname: this.lname,\n                  tname: this.tname,\n                  pid: this.pid,\n                  flag_id: this.select,\n                  now_date: this.nowDate,\n                  rcode_id: this.cate_value.branch_id,\n                  role_id: this.select\n                };\n                console.log('obj', obj);\n                _context.next = 6;\n                return controlData.save(obj);\n\n              case 6:\n                _context.next = 8;\n                return this.awitData();\n\n              case 8:\n                _context.next = 13;\n                break;\n\n              case 10:\n                this.snackฺฺฺBarBool = true;\n                this.msgSnackBar = 'กรุณากรอกให้ครบสิคะ ไปทำมาใหม่นะ';\n                this.color = 'red';\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function dataInsert() {\n        return _dataInsert.apply(this, arguments);\n      };\n    }(),\n    awitData: function awitData() {\n      if (Boolean(store.state.msgSave) === false && Boolean(store.state.msginsertBranch) === false) {\n        console.log('msgErrorLogin', store.state.msgSave);\n        this.loadingbtn = false;\n        this.snackฺฺฺBarBool = true;\n        this.msgSnackBar = 'unsuccessful';\n        this.color = 'red';\n      } else {\n        this.loadingbtn = false;\n        this.snackฺฺฺBarBool = true;\n        this.msgSnackBar = 'success';\n        this.color = 'green';\n      }\n    },\n    success: function success() {\n      this.snackฺฺฺBarBool = false;\n      var menu = 'Menu';\n      this.setDataLogin(menu);\n    },\n    getDataBranch: function () {\n      var _getDataBranch = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var api, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                api = 'https://a-nuphasupit58.000webhostapp.com/php/getBranch.php';\n                _context2.next = 3;\n                return Axios(api);\n\n              case 3:\n                response = _context2.sent;\n                this.getBranch = response.data;\n                console.log(this.getBranch);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function getDataBranch() {\n        return _getDataBranch.apply(this, arguments);\n      };\n    }()\n  })\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <v-container>\n    <v-layout row>\n      <v-flex xs12 sm6 offset-sm3>\n        <v-card>\n          <v-card-text>\n            <v-container>\n              <form>\n                <v-form\n      ref=\"form\"\n      v-model=\"valid\"\n      lazy-validation\n    >\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                    prepend-icon=\"mdi-account-box\"\n\n        v-model=\"username\"\n        :counter=\"15\"\n        :rules=\"nameRules\"\n        label=\"Name\"\n        required\n      ></v-text-field>\n                    <!-- <v-text-field\n                      prepend-icon=\"mdi-account-box\"\n                      label=\"Username\"\n                      v-model=\"username\"\n                      rules=\"nameRules\"\n                      required>\n                    </v-text-field> -->\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                      prepend-icon=\"mdi-lock-question\"\n                      v-model=\"password\"\n                      label=\"password\"\n                      :rules=\"passRules\"\n                      type=\"password\"\n                      required></v-text-field>\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                      prepend-icon= \"mdi-alert-octagon\"\n                      label=\"Validate Password\"\n                      v-model=\"confirmPassword\"\n                      type=\"password\"\n                      :rules=\"[comparePasswords]\"></v-text-field>\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                    prepend-icon=\"mdi-email\"\n                    v-model=\"email\"\n                    :rules=\"emailRules\"\n                    label=\"E-mail\"\n                    required\n                  ></v-text-field>\n                    <!-- <v-text-field\n                    rules=\"emailRules\"\n                      prepend-icon=\"mdi-email\"\n                      label=\"Your E-mail\"\n                      v-model=\"email\"\n                      required></v-text-field> -->\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                      prepend-icon=\"mdi-account\"\n                      name=\"FirstName\"\n                      label=\"FirstName\"\n                      :rules=\"fnameRules\"\n                      id=\"name\"\n                      v-model=\"fname\"\n                      type=\"text\"\n                      required></v-text-field>\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                      prepend-icon=\" \"\n                      label=\"LastName\"\n                      v-model=\"lname\"\n                      :rules=\"lnameRules\"\n                      type=\"text\"\n                      required></v-text-field>\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                    prepend-icon=\"mdi-account-card-details\"\n                      label=\"Pid\"\n                      :rules=\"pidRules\"\n                      v-model=\"pid\"\n                      mask=\"#-####-#####-##-#\"\n                      required></v-text-field>\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <!-- <v-text-field\n                    prepend-icon=\"mdi-account-card-details\"\n                      label=\"id branch\"\n                      v-model=\"branch\"\n                      mask=\"####\"\n                      required></v-text-field> -->\n                       <!-- {{cate_value}} -->\n                       <v-select\n                       :rules=\"branchRules\"\n                :items=\"getBranch\"\n                prepend-icon=\" \"\n                item-value=\"branch_id\"\n                key=\"branch_id\"\n                v-model=\"cate_value\"\n                item-text=\"branch_name\"\n                label=\"branch\"\n                single-line\n                return-object\n                />\n                  </v-flex>\n                </v-layout>\n                <v-layout>\n                  <v-flex>\n                  </v-flex>\n                </v-layout>\n              <v-layout wrap>\n              <v-flex xs12>\n                <v-radio-group v-model=\"tname\" row>\n                  <v-radio required prepend-icon=\" \"  color=\"blue\" label=\"Mr.\" value=\"Mr.\"/>\n                  <v-radio required prepend-icon=\" \"  color=\"blue\" label=\"Mrs.\" value=\"Mrs.\"/>\n                  <v-radio required prepend-icon=\" \"  color=\"blue\" label=\"Ms.\" value=\"Ms.\"/>\n                </v-radio-group>\n              </v-flex>\n              </v-layout>\n              <v-layout>\n                <v-radio-group v-model=\"select\" row>\n                  <v-radio required prepend-icon=\" \"  color=\"blue\" label=\"Manager\" value=\"01\"/>\n                  <v-radio required prepend-icon=\" \"  color=\"blue\" label=\"Empooyee\" value=\"02\"/>\n                </v-radio-group>\n              </v-layout>\n              <v-layout ma-0>\n                  <v-flex xs12 ma-0>\n                    <v-btn color=\"blue\" dark large block :loading='loadingbtn'\n                    @click=\"validate()\" :disabled=\"!valid\" >Register</v-btn>\n                  </v-flex>\n                </v-layout>\n                <v-flex xs12>\n                </v-flex>\n                </v-form>\n              </form>\n            </v-container>\n          </v-card-text>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n  <v-layout row justify-center>\n      <v-dialog v-model=\"snackฺฺฺBarBool\" persistent max-width=\"400px\">\n        <v-card>\n          <v-flex>\n          <v-card-title\n          :class='color'\n          primary-title\n          flat>\n          <v-icon class=\"mr-3\" color=\"white\">mdi-information</v-icon>\n          <v-flex class=\"\"><v-flex class=\"white--text\">INFORMATION</v-flex></v-flex>\n        </v-card-title>\n          <v-card-title>\n            <v-layout justify-center><span>{{msgSnackBar}}</span></v-layout>\n          </v-card-title>\n          </v-flex>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"blue darken-1\" flat @click=\"success()\">Close</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-layout>\n</div>\n</template>\n\n<script>\nimport {\n  mapActions,\n} from 'vuex'\nimport {\n  sync,\n} from 'vuex-pathify'\nimport moment from 'moment'\nimport Axios from 'axios';\nimport controlData from './getApiData/controlData'\nimport store from '../store/store'\nimport functions from '../plugins/functions'\n\n\nexport default {\n  data() {\n    return {\n      cate_value: '',\n      valid: true,\n      color: '',\n      branchName: '',\n      snackฺฺฺBarBool: null,\n      timeout: 10000,\n      select: '02',\n      items: [\n        'Empooyee',\n        'Manager',\n      ],\n      selected: '',\n      confirmPassword: '',\n      getBranch: '',\n      LastName: '',\n      username: '',\n      nameRules: [\n        v => !!v || 'Name is required',\n      ],\n      branchRules: [\n        v => !!v || 'branch is required',\n      ],\n      pidRules: [\n        v => !!v || 'pid is required',\n        v => (v && v.length === 13) || 'pid is not match',\n      ],\n      passRules: [\n        v => !!v || 'password is required',\n      ],\n      fnameRules: [\n        v => !!v || 'firstName is required',\n      ],\n      lnameRules: [\n        v => !!v || 'lastName is required',\n      ],\n      password: '',\n      email: '',\n      emailRules: [\n        v => !!v || 'E-mail is required',\n        v => /.+@.+/.test(v) || 'E-mail must be valid',\n      ],\n      fname: '',\n      lname: '',\n      tname: 'Mr.',\n      branch: '',\n      pid: '',\n      msgSnackBar: '',\n      loadingbtn: null,\n      // nowDate: functions.moment('YYYYMMDD'),\n      nowDate: functions.moment(moment().format('YYYYMMDD')),\n    }\n  },\n  computed: {\n    ...sync('*'),\n    comparePasswords() {\n      return this.password !== this.confirmPassword ? 'Passwords do not match.' : true\n    },\n  },\n  watch: {\n  },\n  created() {\n    this.getDataBranch()\n  },\n  methods: {\n    ...mapActions({\n      setDataLogin: 'getApi/setDataLogin',\n    }),\n    validate() {\n      if (this.$refs.form.validate()) {\n        this.dataInsert()\n      }\n    },\n    async dataInsert() {\n      if (this.username || this.password || this.fname || this.pid) {\n        this.loadingbtn = true\n        const obj = {\n          username: this.username,\n          password: this.password,\n          email: this.email,\n          fname: this.fname,\n          lname: this.lname,\n          tname: this.tname,\n          pid: this.pid,\n          flag_id: this.select,\n          now_date: this.nowDate,\n          rcode_id: this.cate_value.branch_id,\n          role_id: this.select,\n        }\n        console.log('obj', obj)\n        await controlData.save(obj)\n        // const objBranch = {\n        //   branchName: this.branchName,\n        //   branch: this.branch,\n        // }\n        // await controlData.insertBranchName(objBranch)\n        await this.awitData()\n      } else {\n        this.snackฺฺฺBarBool = true\n        this.msgSnackBar = 'กรุณากรอกให้ครบสิคะ ไปทำมาใหม่นะ'\n        this.color = 'red'\n      }\n    },\n    awitData() {\n      if (Boolean(store.state.msgSave) === false && Boolean(store.state.msginsertBranch) === false) {\n        console.log('msgErrorLogin', store.state.msgSave)\n        this.loadingbtn = false\n        this.snackฺฺฺBarBool = true\n        this.msgSnackBar = 'unsuccessful'\n        this.color = 'red'\n      } else {\n        this.loadingbtn = false\n        this.snackฺฺฺBarBool = true\n        this.msgSnackBar = 'success'\n        this.color = 'green'\n      }\n    },\n    success() {\n      this.snackฺฺฺBarBool = false\n      const menu = 'Menu'\n      this.setDataLogin(menu);\n    },\n    async getDataBranch() {\n      const api = 'https://a-nuphasupit58.000webhostapp.com/php/getBranch.php';\n      const response = await Axios(api)\n      this.getBranch = response.data\n      console.log(this.getBranch)\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views"}]}