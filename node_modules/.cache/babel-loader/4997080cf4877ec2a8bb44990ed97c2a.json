{"remainingRequest":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/GlobalDate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/GlobalDate.vue","mtime":1557043206000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"GlobalDate\",\n  props: {\n    value: 0,\n    label: {\n      default: \"\"\n    },\n    disabled: {\n      default: false\n    },\n    readonly: {\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      date: null,\n      dateFormat: null,\n      menu: false\n    };\n  },\n  created: function created() {\n    this.setDate();\n  },\n  computed: {\n    setDisabled: {\n      get: function get() {\n        return this.disabled;\n      },\n      set: function set() {}\n    },\n    setReadonly: {\n      get: function get() {\n        return this.readonly;\n      },\n      set: function set() {}\n    },\n    dateText: {\n      get: function get() {\n        return this.dateFormat;\n      },\n      set: function set(newVal) {\n        if (newVal) {\n          this.dateFormat = newVal;\n          this.date = this.parseDate(this.dateFormat);\n          this.$emit(\"update:value\", this.formatToYYYYMMDD(this.dateFormat));\n        } else {\n          this.dateFormat = null;\n          this.date = null;\n          this.$emit(\"update:value\", 0);\n        }\n      }\n    },\n    dateCalendar: {\n      get: function get() {\n        return this.date;\n      },\n      set: function set(newVal) {\n        this.menu = false;\n        this.date = newVal;\n        this.dateFormat = this.formatDate(this.date);\n        this.$emit(\"update:value\", this.formatToYYYYMMDD(this.dateFormat));\n      }\n    }\n  },\n  watch: {\n    value: function value(newVal, oldVal) {\n      if (newVal) {\n        if (newVal && this.dateFormat == null) {\n          this.dateText = this.formatToDDMMYYYY(newVal);\n        } else if (this.dateFormat.length == 8) {\n          this.dateText = this.formatToDDMMYYYY(newVal);\n        }\n      } else {\n        this.dateText = null;\n      }\n    }\n  },\n  methods: {\n    setDate: function setDate() {\n      if (this.value == 0) return;\n      this.date = this.value.toString();\n      this.dateText = this.formatToDDMMYYYY(this.date);\n    },\n    formatDate: function formatDate(date) {\n      if (!date) return null;\n\n      var _date$split = date.split(\"-\"),\n          _date$split2 = _slicedToArray(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n\n      return \"\".concat(day ? day.padStart(2, \"0\") : \"00\").concat(month ? month.padStart(2, \"0\") : \"00\").concat(String(Number(year) + 543).padStart(4, \"0\"));\n    },\n    parseDate: function parseDate(date) {\n      if (!date) return;\n      if (date.length != 8) return;\n      var _ref = [date.substring(0, 2), date.substring(2, 4), Number(date.substring(4))],\n          day = _ref[0],\n          month = _ref[1],\n          year = _ref[2];\n      var dates = \"\";\n\n      var _this$getDayMonthYear = this.getDayMonthYearForZeroPad(day, month, year),\n          _this$getDayMonthYear2 = _slicedToArray(_this$getDayMonthYear, 3),\n          y = _this$getDayMonthYear2[0],\n          m = _this$getDayMonthYear2[1],\n          d = _this$getDayMonthYear2[2];\n\n      dates = \"\".concat(y, \"-\").concat(m, \"-\").concat(d);\n      return dates;\n    },\n    formatToDDMMYYYY: function formatToDDMMYYYY(date) {\n      var data = \"\".concat(date.toString().padEnd(8, \"0\")); // let data = date\n\n      var _ref2 = [data.substring(0, 4), data.substring(4, 6), data.substring(6)],\n          year = _ref2[0],\n          month = _ref2[1],\n          day = _ref2[2];\n      return \"\".concat(day).concat(month).concat(year);\n    },\n    formatToYYYYMMDD: function formatToYYYYMMDD(date) {\n      var data = \"\".concat(date.toString().padEnd(8, \"0\"));\n      var _ref3 = [data.substring(4), data.substring(2, 4), data.substring(0, 2)],\n          year = _ref3[0],\n          month = _ref3[1],\n          day = _ref3[2];\n      return \"\".concat(year).concat(month).concat(day);\n    },\n    getDayMonthYearForZeroPad: function getDayMonthYearForZeroPad(day, month, year) {\n      var y = String(Math.abs(year - 543)).padStart(4, \"0\");\n      var m = Number(month) ? \"\".concat(month.padStart(2, \"0\")) : \"00\";\n      var d = Number(day) ? \"\".concat(day.padStart(2, \"0\")) : \"00\";\n      return [y, m, d];\n    }\n  }\n};",{"version":3,"sources":["GlobalDate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout row>\n    <v-flex\n      pa-0\n      xs12\n      d-inline-flex\n    >\n      <v-flex xs11>\n        <v-text-field\n          prepend-icon=\" \"\n          v-model='dateText'\n          :label='label'\n          mask='##/##/####'\n          placeholder=' '\n          persistent-hint\n          :readonly='setReadonly'\n          :disabled='setDisabled'\n          :class='{\"text-no-border\" : setDisabled}'\n        />\n      </v-flex>\n      <v-flex\n        xs1\n        pt-2\n        pr-4\n      >\n        <v-menu\n          ref='menu'\n          :close-on-content-click='false'\n          v-model='menu'\n          lazy\n          transition='scale-transition'\n          offset-y\n          full-width\n          :disabled=\"setReadonly\"\n        >\n          <v-icon\n            slot='activator'\n            ref='icon'\n            style=\"margin-top:10px\"\n            color=\"blue\"\n          >mdi-calendar-clock</v-icon>\n          <v-date-picker\n            color=\"blue\"\n            header-color='blue'\n            v-model='dateCalendar'\n            locale='th'\n            :readonly='setReadonly'\n          ></v-date-picker>\n        </v-menu>\n      </v-flex>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\nexport default {\n  name: \"GlobalDate\",\n  props: {\n    value: 0,\n    label: {\n      default: \"\"\n    },\n    disabled: {\n      default: false\n    },\n    readonly: {\n      default: false\n    }\n  },\n  data() {\n    return {\n      date: null,\n      dateFormat: null,\n      menu: false,\n    };\n  },\n  created() {\n    this.setDate();\n  },\n  computed: {\n    setDisabled: {\n      get: function() {\n        return this.disabled;\n      },\n      set: function() {}\n    },\n    setReadonly: {\n      get: function() {\n        return this.readonly;\n      },\n      set: function() {}\n    },\n    dateText: {\n      get: function() {\n        return this.dateFormat;\n      },\n      set: function(newVal) {\n        if (newVal) {\n          this.dateFormat = newVal;\n          this.date = this.parseDate(this.dateFormat);\n          this.$emit(\"update:value\", this.formatToYYYYMMDD(this.dateFormat));\n        } else {\n          this.dateFormat = null;\n          this.date = null;\n          this.$emit(\"update:value\", 0);\n        }\n      }\n    },\n    dateCalendar: {\n      get: function() {\n        return this.date;\n      },\n      set: function(newVal) {\n        this.menu = false;\n        this.date = newVal;\n        this.dateFormat = this.formatDate(this.date);\n        this.$emit(\"update:value\", this.formatToYYYYMMDD(this.dateFormat));\n      }\n    }\n  },\n  watch: {\n    value: function(newVal, oldVal) {\n      if (newVal) {\n        if (newVal && this.dateFormat == null) {\n          this.dateText = this.formatToDDMMYYYY(newVal);\n        } else if (this.dateFormat.length == 8) {\n          this.dateText = this.formatToDDMMYYYY(newVal);\n        }\n      } else {\n        this.dateText = null;\n      }\n    }\n  },\n  methods: {\n    setDate() {\n      if (this.value == 0) return;\n      this.date = this.value.toString();\n      this.dateText = this.formatToDDMMYYYY(this.date);\n    },\n    formatDate(date) {\n      if (!date) return null;\n\n      let [year, month, day] = date.split(\"-\");\n\n      return `${day ? day.padStart(2, \"0\") : \"00\"}${\n        month ? month.padStart(2, \"0\") : \"00\"\n      }${String(Number(year) + 543).padStart(4, \"0\")}`;\n    },\n    parseDate(date) {\n      if (!date) return;\n      if (date.length != 8) return;\n\n      let [day, month, year] = [\n        date.substring(0, 2),\n        date.substring(2, 4),\n        Number(date.substring(4))\n      ];\n\n      let dates = \"\";\n      let [y, m, d] = this.getDayMonthYearForZeroPad(day, month, year);\n      dates = `${y}-${m}-${d}`;\n\n      return dates;\n    },\n    formatToDDMMYYYY(date) {\n      let data = `${date.toString().padEnd(8, \"0\")}`;\n      // let data = date\n      let [year, month, day] = [\n        data.substring(0, 4),\n        data.substring(4, 6),\n        data.substring(6)\n      ];\n\n      return `${day}${month}${year}`;\n    },\n    formatToYYYYMMDD(date) {\n      let data = `${date.toString().padEnd(8, \"0\")}`;\n\n      let [year, month, day] = [\n        data.substring(4),\n        data.substring(2, 4),\n        data.substring(0, 2)\n      ];\n      return `${year}${month}${day}`;\n    },\n    getDayMonthYearForZeroPad(day, month, year) {\n      let y = String(Math.abs(year - 543)).padStart(4, \"0\");\n      let m = Number(month) ? `${month.padStart(2, \"0\")}` : \"00\";\n      let d = Number(day) ? `${day.padStart(2, \"0\")}` : \"00\";\n      return [y, m, d];\n    }\n  }\n};\n</script>\n\n<style>\n.v-date-picker-table {\n  height: auto;\n}\n</style>\n\n<style scoped>\n.text-no-border >>> .v-input__slot:before,\n.text-no-border >>> .v-input__slot:after,\n.text-no-border >>> input {\n  border-style: none;\n  margin-bottom: 0px;\n}\n\n.theme--light >>> table tbody tr:hover:not(.v-datatable__expand-row),\n.theme--light >>> table tbody tr[active] {\n  background-color: #ffffff !important;\n}\n</style>\n"],"sourceRoot":"src/views"}]}