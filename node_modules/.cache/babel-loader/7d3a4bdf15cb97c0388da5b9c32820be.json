{"remainingRequest":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/Branch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/src/views/Branch.vue","mtime":1557043206000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"/Users/asupreyaporn/Downloads/vue-barcode-master/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _moment from 'moment';\nimport controlData from './getApiData/controlData'; // import Quagga from 'quagga';\n\nexport default {\n  data: function data() {\n    return {\n      Store: this.$store.state\n    };\n  },\n  name: 'abount',\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.getBranch();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function created() {\n      return _created.apply(this, arguments);\n    };\n  }(),\n  methods: {\n    getBranch: function getBranch() {\n      controlData.selectBranch(Number(this.Store.dataLogin[0].rcode_id));\n    },\n    moment: function moment() {\n      return _moment();\n    }\n  }\n};",{"version":3,"sources":["Branch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,OAAA,MAAA,QAAA;AACA,OAAA,WAAA,MAAA,0BAAA,C,CACA;;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,KAAA,MAAA,CAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,IAAA,EAAA,QANA;AAOA,EAAA,OAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQA,KAAA,SAAA,EARA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,MAAA,WAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,KAAA,CAAA,SAAA,CAAA,CAAA,EAAA,QAAA,CAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AACA,aAAA,OAAA,EAAA;AACA;AANA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"about\">\n    <v-flex ma-1 color=\"primary\">\n      <v-card>\n        <v-flex>\n          <v-layout>\n            <v-flex ma-3> <span>{{ moment().format('MMMM Do YYYY, h:mm:ss a') }}</span></v-flex>\n          </v-layout>\n          <v-layout align-center justify-center>\n            <v-flex xs10 >\n              <v-text-field v-model=\"Store.dataBranch[0].branch_id\" disabled prepend-icon=\"mdi-city\" name=\"Branch\" label=\"Branch\"></v-text-field>\n            </v-flex>\n          </v-layout>\n          <!-- <v-layout align-center justify-center>\n            <v-flex xs10>\n              <v-text-field prepend-icon=\"mdi-package-variant-closed\"\n              name=\"batch\" label=\"batch\"></v-text-field>\n            </v-flex>\n          </v-layout> -->\n          <v-layout align-center justify-center>\n            <v-flex xs10>\n              <v-text-field prepend-icon=\"mdi-map-marker\"\n              v-model=\"Store.dataBranch[0].branch_name\" disabled\n              name=\"location\" label=\"location\"></v-text-field>\n            </v-flex>\n          </v-layout>\n          <v-flex xs2>\n              <v-btn icon label=\"ถัดไป\">\n              </v-btn>\n            </v-flex>\n        </v-flex>\n      </v-card>\n    </v-flex>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport controlData from './getApiData/controlData'\n// import Quagga from 'quagga';\n\nexport default {\n  data() {\n    return {\n      Store: this.$store.state,\n    }\n  },\n  name: 'abount',\n  async created() {\n    await this.getBranch()\n  },\n  methods: {\n    getBranch() {\n      controlData.selectBranch(Number(this.Store.dataLogin[0].rcode_id))\n    },\n    moment() {\n      return moment();\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/views"}]}