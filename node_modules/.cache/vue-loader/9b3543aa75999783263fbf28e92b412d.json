{"remainingRequest":"C:\\Users\\A-\\Documents\\project-new\\360-care\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\A-\\Documents\\project-new\\360-care\\src\\components\\GlobalDate.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\A-\\Documents\\project-new\\360-care\\src\\components\\GlobalDate.vue","mtime":1634917372990},{"path":"C:\\Users\\A-\\Documents\\project-new\\360-care\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\A-\\Documents\\project-new\\360-care\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\A-\\Documents\\project-new\\360-care\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\A-\\Documents\\project-new\\360-care\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\A-\\Documents\\project-new\\360-care\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi52LWRhdGUtcGlja2VyLXRhYmxlIHsNCiAgaGVpZ2h0OiBhdXRvOw0KfQ0K"},{"version":3,"sources":["GlobalDate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkNA;AACA;AACA","file":"GlobalDate.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-layout row>\r\n    <v-flex\r\n      pa-0\r\n      xs12\r\n      d-inline-flex\r\n    >\r\n      <v-flex xs11>\r\n        <v-text-field\r\n          v-model=\"dateText\"\r\n          prepend-icon=\" \"\r\n          :label=\"label\"\r\n          mask=\"##/##/####\"\r\n          placeholder=\" \"\r\n          persistent-hint\r\n          :readonly=\"setReadonly\"\r\n          :disabled=\"setDisabled\"\r\n          :class=\"{&quot;text-no-border&quot; : setDisabled}\"\r\n        />\r\n      </v-flex>\r\n      <v-flex\r\n        xs1\r\n        pt-2\r\n        pr-4\r\n      >\r\n        <v-menu\r\n          ref=\"menu\"\r\n          v-model=\"menu\"\r\n          :close-on-content-click=\"false\"\r\n          lazy\r\n          transition=\"scale-transition\"\r\n          offset-y\r\n          full-width\r\n          :disabled=\"setReadonly\"\r\n        >\r\n          <v-icon\r\n            slot=\"activator\"\r\n            ref=\"icon\"\r\n            style=\"margin-top:10px\"\r\n            color=\"primary\"\r\n          >\r\n            event\r\n          </v-icon>\r\n          <!-- <v-btn\r\n            small\r\n            slot='activator'\r\n            ref='icon'\r\n            style=\"padding-top:11px;margin-top:0px;margin-left:0px\"\r\n            flat\r\n            icon\r\n            color=\"primary\"\r\n          >\r\n            <v-icon>event</v-icon>\r\n          </v-btn> -->\r\n          <v-date-picker\r\n            v-model='dateCalendar'\r\n            color=\"primary\"\r\n            header-color=\"primary\"\r\n            locale=\"th\"\r\n            :readonly=\"setReadonly\"\r\n          />\r\n        </v-menu>\r\n      </v-flex>\r\n    </v-flex>\r\n  </v-layout>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'GlobalDate',\r\n  props: {\r\n    value: null ,\r\n    label: {\r\n      default: 'วันเกิด',\r\n    },\r\n    disabled: {\r\n      default: false,\r\n    },\r\n    readonly: {\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      date: null,\r\n      Store: this.$store.state,\r\n      dateFormat: null,\r\n      menu: false,\r\n    };\r\n  },\r\n  computed: {\r\n    setDisabled: {\r\n      get() {\r\n        return this.disabled;\r\n      },\r\n      set() {},\r\n    },\r\n    setReadonly: {\r\n      get() {\r\n        return this.readonly;\r\n      },\r\n      set() {},\r\n    },\r\n    dateText: {\r\n      get() {\r\n        return this.dateFormat;\r\n      },\r\n      set(newVal) {\r\n        if (newVal) {\r\n          this.dateFormat = newVal;\r\n          this.date = this.parseDate(this.dateFormat);\r\n          this.$emit(\"update:value\", this.formatToYYYYMMDD(this.dateFormat));\r\n        } else {\r\n          this.dateFormat = null;\r\n          this.date = null;\r\n          this.$emit(\"update:value\", 0);\r\n        }\r\n      },\r\n    },\r\n    dateCalendar: {\r\n      get() {\r\n        return this.date;\r\n      },\r\n      set(newVal) {\r\n        this.menu = false;\r\n        this.date = newVal;\r\n        this.dateFormat = this.formatDate(this.date);\r\n        this.$emit(\"update:value\", this.formatToYYYYMMDD(this.dateFormat));\r\n      },\r\n    },\r\n  },\r\n  watch: {\r\n    value(newVal) {\r\n      if (newVal) {\r\n        if (newVal && this.dateFormat == null) {\r\n          this.dateText = this.formatToDDMMYYYY(newVal);\r\n        } else if (this.dateFormat.length == 8) {\r\n          this.dateText = this.formatToDDMMYYYY(newVal);\r\n        }\r\n      } else {\r\n        this.dateText = null;\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.setDate();\r\n  },\r\n  methods: {\r\n    setDate() {\r\n      if (this.value == 0) return;\r\n      this.date = this.value.toString();\r\n      this.dateText = this.formatToDDMMYYYY(this.date);\r\n    },\r\n    formatDate(date) {\r\n      if (!date) return null;\r\n\r\n      const [year, month, day] = date.split('-');\r\n\r\n      return `${day ? day.padStart(2, '0') : '00'}${\r\n        month ? month.padStart(2, '0') : '00'\r\n      }${String(Number(year) + 543).padStart(4, '0')}`;\r\n    },\r\n    parseDate(date) {\r\n      if (!date) return;\r\n      if (date.length != 8) return;\r\n\r\n      const [day, month, year] = [\r\n        date.substring(0, 2),\r\n        date.substring(2, 4),\r\n        Number(date.substring(4)),\r\n      ];\r\n\r\n      let dates = '';\r\n      const [y, m, d] = this.getDayMonthYearForZeroPad(day, month, year);\r\n      dates = `${y}-${m}-${d}`;\r\n\r\n      return dates;\r\n    },\r\n    formatToDDMMYYYY(date) {\r\n      const data = `${date.toString().padEnd(8, '0')}`;\r\n      // let data = date\r\n      const [year, month, day] = [\r\n        data.substring(0, 4),\r\n        data.substring(4, 6),\r\n        data.substring(6),\r\n      ];\r\n\r\n      return `${day}${month}${year}`;\r\n    },\r\n    formatToYYYYMMDD(date) {\r\n      const data = `${date.toString().padEnd(8, '0')}`;\r\n\r\n      const [year, month, day] = [\r\n        data.substring(4),\r\n        data.substring(2, 4),\r\n        data.substring(0, 2),\r\n      ];\r\n      return `${year}${month}${day}`;\r\n    },\r\n    getDayMonthYearForZeroPad(day, month, year) {\r\n      const y = String(Math.abs(year - 543)).padStart(4, '0');\r\n      const m = Number(month) ? `${month.padStart(2, '0')}` : '00';\r\n      const d = Number(day) ? `${day.padStart(2, '0')}` : '00';\r\n      return [y, m, d];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.v-date-picker-table {\r\n  height: auto;\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.text-no-border >>> .v-input__slot:before,\r\n.text-no-border >>> .v-input__slot:after,\r\n.text-no-border >>> input {\r\n  border-style: none;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.theme--light >>> table tbody tr:hover:not(.v-datatable__expand-row),\r\n.theme--light >>> table tbody tr[active] {\r\n  background-color: #ffffff !important;\r\n}\r\n</style>\r\n"]}]}